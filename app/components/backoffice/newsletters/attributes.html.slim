.NewsletterAttributes
  dl
    dt = human_attribute_name(newsletter, :name)
    dd = newsletter.name
    dt = human_attribute_name(newsletter, :oldest_issue_to_crawl)
    dd = newsletter.oldest_issue_to_crawl
    dt = human_attribute_name(newsletter, :crawler)
    dd
      - case crawler = newsletter.crawler
      - when ArchivePageCrawler
        dl
          dt = human_attribute_name(crawler, :kind)
          dd = crawler.kind
          dt = human_attribute_name(crawler, :archive_page_url)
          dd = crawler.archive_page_url
          dt = human_attribute_name(crawler, :issue_link_selector)
          dd = crawler.issue_link_selector
          dt = human_attribute_name(crawler, :issue_number_regex)
          dd = crawler.issue_number_regex
      - when URLTemplateCrawler
        dl
          dt = human_attribute_name(crawler, :kind)
          dd = crawler.kind
          dt = human_attribute_name(crawler, :url_template)
          dd = crawler.url_template
      - else
        = crawler&.kind || "␀"
    dt = human_attribute_name(newsletter, :scraper)
    dd
      dl
        dt = human_attribute_name(newsletter.scraper, :links_scraper)
        dd
          dl
            - links_scraper = newsletter.scraper.links_scraper
            dt = human_attribute_name(links_scraper, :link_block_selector)
            dd = links_scraper.link_block_selector
            dt = human_attribute_name(links_scraper, :anchor_selector)
            dd = links_scraper.anchor_selector
            dt = human_attribute_name(links_scraper, :blurb_selector)
            dd = links_scraper.blurb_selector
            dt = human_attribute_name(links_scraper, :cleanup_regexes)
            dd
              - links_scraper.cleanup_regexes.each do |regex|
                div = regex
              - if links_scraper.cleanup_regexes.empty?
                | ∅
        dt = human_attribute_name(newsletter.scraper, :publication_date_scraper)
        dd
          - case scraper = newsletter.scraper.publication_date_scraper
          - when NodeAttributePublicationDateScraper
            dl
              dt = human_attribute_name(scraper, :kind)
              dd = scraper.kind
              dt = human_attribute_name(scraper, :node_selector)
              dd = scraper.node_selector
              dt = human_attribute_name(scraper, :node_attribute_name)
              dd = scraper.node_attribute_name
          - when NodeTextPublicationDateScraper
            dl
              dt = human_attribute_name(scraper, :kind)
              dd = scraper.kind
              dt = human_attribute_name(scraper, :node_selector)
              dd = scraper.node_selector
              dt = human_attribute_name(scraper, :extractor_regex)
              dd = scraper.extractor_regex || "␀"
          - else
            = scraper&.kind || "␀"
